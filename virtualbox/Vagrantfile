# -*- mode: ruby -*-
# vi: set ft=ruby :
#

btrfs_disk = './tmp/btrfs_disk.vdi'

Vagrant.configure("2") do |config|
  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "ubuntu/xenial64"

  # Opening ports expected by Tray on launcher installation
  #config.vm.network "forwarded_port", guest: 8443, host: 9999, host_ip: "127.0.0.1"
  #config.vm.network "forwarded_port", guest: 22, host: 4567, host_ip: "127.0.0.1"
  config.vm.network 
    :forwarded_port, 
    guest: 22, 
    host: 2222, 
    id: "ssh", 
    disabled: true
  config.ssh.port = 4567
  config.ssh.username = "ubuntu"

  # network interfaces: bridge, nat, hostonly in that order
  # config.vm.network :public_network, type: 'dhcp', adapter: 1

#  config.vm.network "public_network"
  config.vm.provider "virtualbox" do |vb|
    vb.gui = false
    vb.memory = "4096"
    vb.cpus = 2
    unless File.exist?(btrfs_disk)
      vb.customize ['createhd', '--filename', btrfs_disk, '--size', 100 * 1024]
    end
    vb.customize ['storageattach', :id, '--storagectl', 'SCSI', '--port', 4, '--device', 0, '--type', 'hdd', '--medium', btrfs_disk]
    vb.name = "xenial64-subutai-peer"

    # eth0 bridged interface configuration
    vb.customize ["modifyvm", :id, "--nic1", "bridged"]

    # eth1 nat interface configuration
    vb.customize ["modifyvm", :id, "--nic2", "nat"]
    vb.customize ["modifyvm", :id, "--nat-network2", "NatNetwork"]
    vb.customize ["modifyvm", :id, "--natpf2", "ssh,tcp,127.0.0.1,4567,,22"]

    # eth2 hostonly interface configuration
#    vb.customize ["modifyvm", :id, 
#      "--nic3", "hostonly",
#      "--hostonlyadapter3", 'vboxnet0',
#      "--intnet3", 'vboxnet0']
    vb.customize ["modifyvm", :id, "--nic3", "hostonly"]
    vb.customize ["modifyvm", :id, "--hostonlyadapter3", "vboxnet0"]
    vb.customize ["modifyvm", :id, "--intnet3", "vboxnet0"]

    # console output
    vb.customize [ "modifyvm", :id, "--uart1", "0x3F8", "4" ]
    vb.customize [ "modifyvm", :id, "--uartmode1", "file", File.join(Dir.pwd, "subutai-peer-console.log") ]

    # only for dev and master
    vb.linked_clone = true
  end
 
  config.vm.provision "shell", inline: <<-SHELL
     echo Hello World
#    snap install subutai-master --devmode --beta
#    /snap/subutai-master/current/bin/btrfsinit /dev/sdc
#    subutai-master import management
  SHELL
end
